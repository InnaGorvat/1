import numpy as np # linear algebra
import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)
import matplotlib.pyplot as plt # for data visualization
import seaborn as sns # for statistical data visualization
from sklearn.preprocessing import LabelEncoder
from sklearn.preprocessing import MinMaxScaler
from sklearn.cluster import KMeans




import os
for dirname, _, filenames in os.walk('/input'):
    for filename in filenames:
        print(os.path.join(dirname, filename))

import warnings
warnings.filterwarnings('ignore')


data = 'College.csv'
df = pd.read_csv(data)

print(df.shape)
print(df.head())
print(df.info())
print(df.isnull().sum())
print(df.info())
print(df.describe())
print(df['Private'].unique())
print(len(df['Private'].unique()))
print(df['Apps'].unique())
print(len(df['Apps'].unique()))
print(df['Accept'].unique())
print(len(df['Accept'].unique()))
df.drop(['Apps', 'Accept'], axis=1, inplace=True)
df.info()
print(df.head())


X=df
y=df['Private']
le = LabelEncoder()
X['Private'] = le.fit_transform(X['Private'])
y = le.transform(y)
X.info()
print(X.head())



cols = X.columns
ms = MinMaxScaler()
X = ms.fit_transform(X)
X = pd.DataFrame(X, columns=[cols])
print(X.head())



kmeans = KMeans(n_clusters=2, random_state=0)
kmeans.fit(X)

labels = kmeans.labels_
correct_labels = sum(y == labels)
print("Result: %d out of %d samples were correctly labeled." % (correct_labels, y.size))
print('Accuracy score: {0:0.2f}'. format(correct_labels/float(y.size)))



cs = []
for i in range(1, 11):
    kmeans = KMeans(n_clusters = i, init = 'k-means++', max_iter = 300, n_init = 10, random_state = 0)
    kmeans.fit(X)
    cs.append(kmeans.inertia_)
plt.plot(range(1, 11), cs)
plt.title('The Elbow Method')
plt.xlabel('Number of clusters')
plt.ylabel('CS')
plt.show()
 
kmeans = KMeans(n_clusters=3, random_state=0)
kmeans.fit(X)
labels = kmeans.labels_
correct_labels = sum(y == labels)
print("Result: %d out of %d samples were correctly labeled." % (correct_labels, y.size))
print('Accuracy score: {0:0.2f}'. format(correct_labels/float(y.size)))




kmeans = KMeans(n_clusters=4, random_state=0)
kmeans.fit(X)
labels = kmeans.labels_
correct_labels = sum(y == labels)
print("Result: %d out of %d samples were correctly labeled." % (correct_labels, y.size))
print('Accuracy score: {0:0.2f}'. format(correct_labels/float(y.size)))



data = pd.read_csv('College.csv')
features = ['Apps', 'Accept', 'Enroll', 'Top10perc','Top25perc', 'F.Undergrad', 'P.Undergrad', 'Outstate', 'Room.Board','Books', 'Personal', 'PhD', 'Terminal', 'S.F.Ratio', 'perc.alumni','Expend', 'Grad.Rate']

for i in range (len(features)-1):
    plt.figure()
    sns.scatterplot(data=data, x=features[i], y=features[i+1],hue='Private',style='Private')



